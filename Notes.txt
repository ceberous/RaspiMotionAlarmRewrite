https://www.thepolyglotdeveloper.com/2016/01/creating-a-real-time-chat-application-with-ionic-2-and-socket-io/


==============================================================================================================================
==============================================================================================================================
1.) Create Service on Raspberry PI To Keep a Reverse Tunnel Open to the Remote REDIS Server
2.) The Problem is if you have already used autossh for some other Tunnel , you can't add more somehow
3.) So  use the other type of service in 2.) If you have autossh running something else

sudo touch /var/run/autossh-redis1.pid
sudo chmod 644 /var/run/autossh-redis1.pid

sudo nano /etc/systemd/system/autossh-redis1.service

[Unit]
Description=Keeps a tunnel to 'Redis1' Open
After=network.target
[Service]
Environment="AUTOSSH_PIDFILE=/var/run/autossh.pid"
Environment="AUTOSSH_POLL=60"
Environment="AUTOSSH_FIRST_POLL=30"
Environment="AUTOSSH_GATETIME=0"
Environment="AUTOSSH_DEBUG=1"
ExecStart=/usr/bin/autossh -M 10003 -N -L 10079:localhost:6379 $VPS_SLEEP_USER@$VPS_IP -o ServerAliveInterval=60 -o ServerAliveCountMax=3 -o IdentitiesOnly=yes  -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=ERROR -F /dev/null -i /home/pi/.ssh/$SSH_PRIVATE_KEY
ExecStop=/usr/bin/pkill autossh
Restart=always

[Install]
WantedBy=multi-user.target


==============================================================================================================================
==============================================================================================================================
2.) Create

sudo nano /etc/systemd/system/autossh-redis1.service

[Unit]
Description=SSH Tunnel to Redis1
After=network.target

[Service]
Restart=always
RestartSec=20
User=pi
ExecStart=/usr/bin/ssh -N -L 10089:localhost:6379 $REMOTE_REDIS_SERVER_USERNAME@$REMOTE_REDIS_SERVER_IP ServerAliveInterval=60 -o ServerAliveCountMax=3 -o IdentitiesOnly=yes  -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=ERROR -F /dev/null -i /home/pi/.ssh/$REMOTE_REDIS_SERVER_PRIVATE_KEY

[Install]
WantedBy=multi-user.target

==============================================================================================================================
==============================================================================================================================


==============================================================================================================================
==============================================================================================================================
3.) On RelayMain , Create Utility Connection Script

sudo nano /usr/local/bin/raspiNeuro

#!/bin/bash
sshpass -p raspberry ssh pi@localhost -p 10002 -AY -o ServerAliveInterval=60

==============================================================================================================================
==============================================================================================================================


==============================================================================================================================
==============================================================================================================================
4.) Create Direct Bridge Utility Script From Client -> RelayMain -> Raspberry PI

sudo nano /usr/local/bin/relayMainRaspiNeuro

#!/bin/bash
ssh -tt -o IdentitiesOnly=yes -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o ServerAliveInterval=60  -o LogLevel=ERROR  -F /dev/null \
-i /Users/morpheous/.ssh/RelayMain $RELAY_MAIN_USERNAME@$RELAY_MAIN_IP /usr/local/bin/raspiNeuro

==============================================================================================================================
==============================================================================================================================


==============================================================================================================================
==============================================================================================================================
5.) Create Utility Script on Raspberry Pi for Viewing Latest Frame PNG in Terminal

sudo nano /usr/local/bin/frameLatest

#!/bin/bash
convert /home/pi/WORKSPACE/RaspiMotionAlarmRewrite/client/frame.jpeg /home/pi/WORKSPACE/RaspiMotionAlarmRewrite/client frame.png
tiv /home/pi/WORKSPACE/RaspiMotionAlarmRewrite/client/frame.png

==============================================================================================================================
==============================================================================================================================

============================================================================================================================================================================================================================================================
6.) Create Service on Raspberry PI for Keeping motion.py Running During Time Window

sudo nano /etc/systemd/system/motion-script.service

[Unit]
Description=Keeps motion.py Script Running During Time Window
After=multi-user.target

[Service]
Type=idle
ExecStart=/usr/bin/python /home/pi/WORKSPACE/RaspiMotionAlarmRewrite/py_script/motion_simple_rewrite_fixed.py
ExecStop=/usr/bin/pkill python
Restart=always

[Install]
WantedBy=multi-user.target

============================================================================================================================================================================================================================================================
